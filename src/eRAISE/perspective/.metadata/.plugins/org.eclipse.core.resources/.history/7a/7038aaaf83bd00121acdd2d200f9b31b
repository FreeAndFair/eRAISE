system_chart eRAISESystem
	indexing 
		author: "Marieta Vasilica Fasie"	
cluster RSLPerspective
	description "The Eclipse RAISE perspective. It contains all components and functionality relevant for a RAISE project"
end
	cluster core
		description "Comprises functionality for typechecking an RSL specification, translating it to SML, executing the test case and for generating the Latex documentation"
	cluster editor
		description "Groups all editor specific functionality"
	cluster testcases
		description "Contains the elements displaying the RSL test cases"
	cluster wizard
		description "Contains all components that are dealing with the creation of a new RSL project"
end

cluster_chart core
	class Console
		description "Displays the output of different components e.g. TypeChecker, SMLTranslator"
	class ResourceHandler 
		description "Handles the actions done on workspace resources"
	class IRSLTestCaseListener
		description "The contract used by the test cases listeners"
	class SMLTranslator
		description "Translates RSL specifications to SML code"
	class LatexGenerator
		description "Integrates RSL specification in Latex"
	class TestRunner
		description "Executes the SML files"
	class TypeChecker 
		description "The RSL syntax and type checker"	
	cluster guihandlers
		description "Comprises all UI handlers"		
end

cluster_chart guihandlers
	class TCHandler
		description "Notified when the 'Type check' button is pressed"
	class TCAllHandler
		description "Notified when 'Type check all' menu is selected"
	class SMLHandler
		description "Notified when the 'SML translate' menu is selected"
	class SMLAllHandler
		description "Notified when SML translate all menu is selected"
	class RTHandler
		description "Notified when the 'Run test cases' button is pressed"
	class RTAllCasesHandler
		description "Notified when 'Run all test cases' menu is selected"
	class LatexHandler
		description "Notified when the 'Generate Latex' button is pressed"
	class LatexAllHandler
		description "Notified when 'Generate Latex for all' menu is selected"
end


cluster_chart editor
	class ConsoleToProblems 
		description "Connects the Console and the Problems View"
	class Problem
		description "Represents an RSL type check error"
	class ProblemsView 
		description "Displays any problem existing in the current workspace"
	class RSLEditor 
		description "The RSL text editor"
	cluster config
		description "Contains components that configure the editor for the RSL specification"
end
 
cluster_chart config
	class ColorManager
		description "Manages the colors displayed inside the RSL editor"
	class IRSLSyntaxColors
		description "Stores the colours unsed inside the RSL editor"
	class MathWordDetector
		description "Identifies mathematical words inside the RSL editor"
	class RSLCodeScanner
		description "Scans the RSL source in search for key words, strings and white spaces"
	class RSLConfiguration
		description "Registers the source code scanners"
	class RSLDocumentProvider
		description "Document provider for the RSL files"
	class RSLDoubleClickStrategy
		description "Decides what text is selected  when the user double clicks inside the editor"
	class RSLPartitionScanner
		description "Scans the RSL source code based on the rules specified in the constructor"
	class RSLWordDetector
		description "Defines  rules for accepting a character as being part of a keyword"
	class WhiteSpaceDetector
		description "Defines what characters can be considered whitespaces"
end 


cluster_chart testcases
	cluster model
		description "Comprises the classes creating the test cases model that is displayed inside RTestView"
	cluster ui
		description "Contains the classes displaying the test cases results"
end

cluster_chart model
	class RSLTestCaseModel
		description "Stores the model that will be displayed in RTestView"
	class RSLTestFile
		description "Represents the first level in the RTestView"
	class TestCase
		description "Represents the second level in the RTestView"
	class TestCasesListener
		description "Implements the test cases listener"
end

cluster_chart ui
	class RTestView
		description "Defines the 'Test' View content as a TreeViewer"
	class TestCaseContentProvider
		description "Provides the content for the TestView"
	class TestCaseLabelProvider
		description "Provides the labels for the TestView"
end


cluster_chart wizard
	class NewRSLProjectWizard
		description "RSL new project wizard"
	class RSLPerspective
		description "Groups the RSL associated views and actions"
	class RSLProjectPage
		description "Page collecting the user input"
end


----------------------------------------------------------------
-- classes inside the typechecker
---------------------------------------------------------------- 
class_chart Console
indexing
	in_cluster: "core"
explanation 
 	"Displays the output of different components e.g. TypeChecker, SMLTranslator"
command
	"Display informative or error messages",
	"Clear console content"
end
 
class_chart ResourceHandler
indexing
	in_cluster: "core"
explanation 
 	"Handles the actions done on workspace resources"
query
	"Are there any RSL files in this project?"
command
	"Add this file to this project",
	"Add this project in the workspace",
	"Move file from this source project to destination project"
end 
 
class_chart IRSLTestCaseListener
indexing
	in_cluster: "core"
explanation 
 	"The contract used by the test cases listeners"
 command
	"Modify SML file"
end  

class_chart SMLTranslator
indexing
	in_cluster: "core"
explanation 
 	"Translates RSL specifications to SML code"
command
	"Translate this context into SML"
constraint
	"All RSL specification must be type checked first"
end
 
class_chart LatexGenerator
indexing
	in_cluster: "core"
explanation 
 	"Integrates RSL specification in Latex"
command
	"Integrate this context in Latex"
end

class_chart TestRunner
indexing
	in_cluster: "core"
explanation 
 	"Executes the SML files"
 command
	"Execute the test cases from this context"
end
 
class_chart TypeChecker
indexing
	in_cluster: "core"
explanation 
	"The RSL syntax and type checker"
query
	"Is this context and entity pair type correct?"
end

----------------------------------------------------------------
-- classes inside the guihandlers cluster
---------------------------------------------------------------- 
class_chart TCHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when the 'Type check' button is pressed"
end
 
class_chart TCAllHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when 'Type check all' menu is selected"
end

class_chart SMLHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when the 'SML translate' menu is selected"
end
 
class_chart SMLAllHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when SML translate all menu is selected"
end

class_chart RTHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when the 'Run test cases' button is pressed"
end
 
class_chart RTAllHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when 'Run all test cases' menu is selected"
end

class_chart LatexHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when the 'Generate Latex' button is pressed"
end
 
class_chart LatexAllHandler
indexing
	in_cluster: "guihandlers"
explanation 
 	"Notified when 'Generate Latex for all' menu is selected"
end

----------------------------------------------------------------
-- classes inside editor
----------------------------------------------------------------  
class_chart ConsoleToProblems
indexing
	in_cluster: "editor"
explanation 
 	"Listens to the Console in order to update the ProblemsView"
end

class_chart Problems
indexing
	in_cluster: "editor"
explanation 
 	"Represents an RSL type check error"
end
  
class_chart ProblemsView
indexing
	in_cluster: "editor"
explanation 
 	"Displays all type check errors in the current workspace"
command
	"Display the set of problems"
end
 
class_chart RSLEditor
indexing
	in_cluster: "editor"
explanation 
 	"The RSL editor"
end
 
 -------------------------------------------------------------------
 -- classes inside the editor.config
 -------------------------------------------------------------------
class_chart ColorManager
indexing
	in_cluster: "config"
explanation 
 	"Manages the colors displayed inside the RSL editor"
end
 
class_chart IRSLSyntaxColors
indexing
	in_cluster: "config"
explanation 
 	"Stores the colours unsed inside the RSL editor"
end
 
class_chart MathWordDetector
indexing
	in_cluster: "config"
explanation 
 	"Identifies mathematical words inside the RSL editor"
end

class_chart OutlineView
indexing
	in_cluster: "Structure"
explanation 
 	"Displays the structure of the RSL specification"
command
	"Display the signature" 	
end
 
class_chart RSLCodeScanner
indexing
	in_cluster: "config"
explanation 
 	"Scans the RSL source in search for key words, strings and white spaces"
end
 
class_chart RSLConfiguration
indexing
	in_cluster: "config"
explanation 
 	"Registers the source code scanners"
end
 
class_chart RSLDocumentProvider
indexing
	in_cluster: "config"
explanation 
 	"Document provider for the RSL files"
end
 
class_chart RSLDoubleClickStrategy
indexing
	in_cluster: "config"
explanation 
 	"Decides what text is selected  when the user double clicks inside the editor"
end
 
class_chart RSLPartitionScanner
indexing
	in_cluster: "config"
explanation 
 	"Scans the RSL source code based on the rules specified in the constructor"
end 

class_chart RSLWordDetector
indexing
	in_cluster: "config"
explanation 
 	"Defines  rules for accepting a character as being part of a keyword"
end 

class_chart WhiteSpaceDetector
indexing
	in_cluster: "config"
explanation 
 	"Defines what characters can be considered whitespaces"
end 
 

----------------------------------------------------------------
-- classes inside the testcases.model cluster
----------------------------------------------------------------
class_chart RSLTestCaseModel
indexing
	in_cluster: "model"
explanation 
	"Stores the model that will be displayed in RTestView"
query 
	"Are there any test cases in the RSL specification?"
command
	"Add an RSL specification to the model",
	"Remove an RSL specification from the model"
end 

class_chart RSLTestFile
indexing
	in_cluster: "model"
explanation 
	"Represents the first level in the RTestView"
end

class_chart TestCase
indexing
	in_cluster: "model"
explanation 
	"Represents the second level in the RTestView"
end 

class_chart TestCasesListener
indexing
	in_cluster: "model"
explanation 
	"Implements the test cases listener"
end

----------------------------------------------------------------
-- classes inside the testcases.ui cluster
---------------------------------------------------------------- 
class_chart RTestView
indexing
	in_cluster: "ui"
explanation 
	"Defines the 'Test' View content as a TreeViewer"
command
	"Display the set of test results"
end 

class_chart TestCaseContentProvider
indexing
	in_cluster: "ui"
explanation 
	"Provides the content for the TestView"
end 
 
class_chart TestCaseLabelProvider
indexing
	in_cluster: "ui"
explanation 
	"Provides the labels for the TestView"
end 
 
----------------------------------------------------------------
-- classes inside the wizard
----------------------------------------------------------------
class_chart NewRSLProjectWizard
indexing
	in_cluster: "wizard"
explanation 
	"RSL new project wizard"
end 
 
class_chart RSLPerspective
indexing
	in_cluster: "wizard"
explanation 
	"Groups the RSL associated views and actions"
end 

class_chart RSLProjectPage
indexing
	in_cluster: "wizard"
explanation 
	"Page collecting the user input"
end 



scenario_chart RSLPERSPECTIVE
  	scenario "R1" 
  		description "The user must be able to create a new RAISE project"
  	scenario "R2" 
  		description "The user must be able to import an existing RAISE project."
  	scenario "R3" 
  		description "When a new RAISE project is created, it contains a single folder named 'src'"
  	scenario "R4" 
  		description "The user must be able to add an existing RSL file to an existing RSL project"
  	scenario "R5" 
  		description "The user must be able to add a new RSL file to an existing RSL project"
	scenario "R6"
		description "All RSL actions and views are stores inside the RSL perspective" 
  	scenario "R7" 
  		description "When a RAISE project is imported, it is automatically TYPECHECKPRJ"
  	scenario "R8"
  		description "A RAISE project can have associated one SML project that has the same name plus the suffix 'SML'. This project is created when the first SML file is created"
  	scenario "R9"  			
		description "A generated SML file is stored in the SML project associated to the RAISE project that contains the translated RSL file"
	scenario "R10"
  		description "A RAISE project can have associated one PVS project that has the same name plus the suffix 'PVS'. This project is created when the first PVS file is created"
	scenario "R11"  			
		description "A generated PVS file is stored in the PVS project associated to the RAISE project that contains the translated RSL file"
	scenario "R12"
  		description "A RAISE project can have associated one SAL project that has the same name plus the suffix 'SAL'. This project is created when the first SAL file is created"
	scenario "R13"  			
		description "A generated SAL file is stored in the SAL project associated to the RAISE project that contains the translated RSL file"
	scenario "R14"
  		description "A RAISE project can have associated one documentation project that has the same name plus the suffix 'DOC'. This project is created when the first documentation file is created"	
	scenario "R15"  			
		description "A generated Latex file is stored in the Documentation project associated to the RSL project that contains the translated RSL file"
	scenario "R16"
		description "The documentation project contains a 'main.tex' file that includes all the other tex files in the documentation project"  				  		
end

scenario_chart Core_method_invocation_sequences

end

scenario_chart PROJECT_EXPLORER_FILE
	scenario "PRJF1"
		description "The user can TYPECHECK one RSL file. This implies CONSOLEUPDATE, PROBLEMSUPDATE and EDITORUPDATE"
	scenario "PRJF2"
		description "The user can SMLTRANSLATE one RSL file. This implies CONSOLEUPDATE, PROJECTEXPLORERUPDATE, PROBLEMSUPDATE and EDITORUPDATE"	
	scenario "PRJF3"
		description "The user can RUNTESTS on one RSL file. This implies RTESTUPDATE, PROJECTEXPLORERUPDATE, PROBLEMSUPDATE and CONSOLEUPDATE"
	scenario "PRJF4"
		description "The user can GENERATELATEX for one RSL file. This implies CONSOLEUPDATE and PROJECTEXPLORERUPDATE"
end

scenario_chart PROJECT_EXPLORER_PRJ
	scenario "PRJ1"
		description "The user can TYPECHECKPRJ RSL files in a project. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "PRJ2"
		description "The user can SMLTRANSLATEPRJ RSL files in a project. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "PRJ3"
		description "The user can RUNTESTSPRJ cases in a project. This implies RTESTUPDATE, PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "PRJ4"
		description "The user can GENERATELATEXPRJ for all RSL files in a project. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
end

scenario_chart MENU
	scenario "TCALLMenu"
		description "The user can TYPECHECKALL RSL files in the workspace. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "SMLaLLMenu"
		description "The user can SMLTRANSLATEALL RSL files in the workspace. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "RunAllMenu"
		description "The user can RUNALLTESTS cases in the workspace. This implies RTESTUPDATE, PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "LatexAllMenu"
		description "The user can GENERATELATEXALL for all files in the workspace. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
end


scenario_chart REPL
	scenario "REPL1"
		description "The user can write ASCII characters in the REPL view"
	scenario "REPL2"
		description "The user can REPLEXECUTE"
	scenario "REPL3"
		description "The output of a user evaluation is REPLUPDATE"
	scenario "REPL4"
		description "The user can CHANGECONTEXT"
	scenario "REPL5"
		description "The user can clear the entire content of the  REPL"
end

scenario_chart TEST
	scenario "TEST1"
		description "The evaluation of test cases results in CONSOLEUPDATE, PROBLEMSUPDATE and EDITORUPDATE"
	scenario "TEST2"
		description "Tests results are shown in a separate view involves RTESTUPDATE"
	scenario "TEST3"
		description "The tests results are stored in a separate file"
end

scenario_chart OUTLINE
	scenario "OTL1"
		description "The user can see the signatures for the entire project in a dedicated window"
end

scenario_chart PROOF
	scenario "PRF1"
		description "The user can see the theorems evaluation in a console log"	
	scenario "PRF2"
		description "In order to prove the theorems the SAL assertions and PVS translators are used"
end

scenario_chart PROBLEMS
	scenario "PRB1"
		description "The user can see the problems existing in the workspace with PROBLEMSUPDATE and EDITORUPDATE. "
	scenario "PRB2"
		description "For each problem the description, resource, path, location and type are specified"
end

scenario_chart CONSOLE
	scenario "CNS1"
		description "The user can see the success or failure messages with CONSOLEUPDATE"	
end
 
scenario_chart EDITOR	
	scenario "EDT1"
		description "The user can TYPECHECK the active file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "EDT2"
		description "The user can SMLTRANSLATE the active RSL file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "EDT3"
		description "The user can RUNTESTS cases in the active RSL file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "EDT4"
		description "The user can GENERATELATEX files for the active RSL file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "EDT5"
		description "The user SAVE the current RAISE file and the TYPECHECK is automatically run."
	scenario "EDT6" 
  		description "The user clicks on the typecheck button to TYPECHECK the currently active file."
  	scenario "EDT7" 
  		description "The user clicks on the run test cases button to RUNTESTS in the currently active file."
  	scenario "EDT8" 
  		description "The user clicks the Latex button to GENERATELATEX for the currently active file"
	scenario "ED9"
		description "RSL keywords and mathematical words are written with a different colour in the editor"
end


event_chart UserActions
  	-- in between features and scenarios
	incoming
	explanation
		"External events trigering representative system behaviour"
	part "1/2"
	
	event "TYPECHECK: User clicks the type check button or user right clicks on a RSL file(or inside editor) and then clicks on Type Check option or user presses Alt+T" involves 
		TypeChecker, Console, ConsoleToProblems, ProblemsView
	event "SMLTRANSLATE: User presses translate to SML button or user right clicks on a RSL file(or inside editor) and then clicks Translate to SML option or user presses Alt+M" involves
		SMLTranslator, TypeChecker, Console, ConsoleToProblems, ProblemsView, ProjectExplorer, RTestView
	event "RUNTESTS: User clicks the run test cases button or user right clicks on RSL file(or inside editor) and then clicks on Run Test Cases option or presses Alt+F11" involves 
		SMLTranslator, TypeChecker, Console, ConsoleToProblems, ProblemsView, ProjectExplorer, RTestView
	event "GENERATELATEX: User clicks Latex button or user right clicks on a RSL file(or inside editor) and then clicks on Generate Latex or user presses Alt+L" involves
		LatexGenerator, Console, ProjectExplorer	
	event "TYPECHECKALL: User clicks RSL menu and then clicks on Type Check all option or presses Ctrl+Alt+C" involves
		ProjectExplorer, TypeChecker, Console, ConsoleToProblems, ProblemsView
	event "SMLTRANSLATEALL: User clicks RSL menu and then clicks on Translate all to SML option or presses Ctrl+Alt+M" involves
		ProjectExplorer, SMLTranslator, TypeChecker, Console, ConsoleToProblems, ProblemsView, ProjectExplorer, RTestView
	event "RUNALLTESTS: User clicks RSL menu and then clicks on Run all test cases option or presses Ctrl+Alt+F11" involves
		ProjectExplorer, SMLTranslator, TypeChecker, Console, ConsoleToProblems, ProblemsView, ProjectExplorer, RTestView
	event "GENERATELATEXALL: User clicks RSL menu and then clicks on Generate Latex for all option or presses Ctrl+Alt+L" involves
		ProjectExplorer, LatexGenerator, Console
	event "TYPECHECKPRJ: User right clicks on a RSL project and selects type check option" involves
		ProjectExplorer, TypeChecker, Console, ConsoleToProblems, ProblemsView
	event "SMLTRANSLATEPRJ: User right clicks on a RSL project and then clicks on translate to SML option" involves
		ProjectExplorer, SMLTranslator, TypeChecker, Console, ConsoleToProblems, ProblemsView, ProjectExplorer, RTestView
	event "RUNTESTSPRJ: User right clicks on a RSL project and then clicks on Run test cases option" involves
		ProjectExplorer, SMLTranslator, TypeChecker, Console, ConsoleToProblems, ProblemsView, ProjectExplorer, RTestView
	event "GENERATELATEXPRJ: User right clicks on a RSL project and then clicks on Generate Latex option" involves
		ProjectExplorer, LatexGenerator, Console
	event "REPLEXECUTE: User presses CTRL+enter in REPL view" involves
		REPLView, SMLCompiler, SMLTranslator, TypeChecker
	event "CHANGECONTEXT: User writes the name of the context and presses enter to change context in REPL" involves
		REPLView
	event "SHOWONLYFAILURES: User presses the Show only failures in RTest View" involves
		RTestView
	event "IMPORT: User imports a RAISE project or a RSL file" involves
		ProjectExplorer, TypeChecker, Console, ConsoleToProblems, ProblemsView
	event "SAVE: User presses File and then Save option or Ctrl+s" involves
		TypeChecker, Console, ConsoleToProblems, ProblemsView
end

event_chart UserMessages
  	-- in between features and scenarios
	outgoing
	explanation
		"Internal events trigerring responses meant to inform the user. The list presented here concerns those events that are not explicitly requested by the user"
	part "2/2"
	
	event "OUTLINEUPDATE: Outline view update" involves
		Editor, OutlineView, TypeChecker
	event "PROOFUPDATE: Proof view update" involves
		PVSTranslator, SALTranslator, ProofView, TypeChecker
	event "PROBLEMSUPDATE: Problems view update" involves
		TypeChecker, Console, ConsoleToProblems, ProblemsView
	event "CONSOLEUPDATE: Successs or failure messages displayed in console" involves
		Console, TypeChecker, SMLTranslator
	event "EDITORERRUPDATE: Display error message in editor" involves
		Editor, TypeChecker
	event "REPLUPDATE: Displays the evaluation result or an error in REPL vindow" involves
		REPL, core   
	event "RTESTUPDATE: Displays the test cases interpretation" involves RTestView 
	event "PROJECTEXPLORERUPDATE: Files and folders are added in the workspace" involves 
		ProjectExplorer
end