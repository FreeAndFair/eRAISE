scenario "PRJF1"
	description "The user can TYPECHECK one RSL file. This implies CONSOLEUPDATE, PROBLEMSUPDATE and EDITORUPDATE"
scenario "PRJ1"
	description "The user can TYPECHECKPRJ RSL files in a project. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
scenario "TCALLMenu"
	description "The user can TYPECHECKALL RSL files in the workspace. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
scenario "EDT1"
	description "The user can TYPECHECK the active file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
scenario "EDT6" 
  		description "The user clicks on the typecheck button to TYPECHECK the currently active file."


scenario_chart RSLPERSPECTIVE
  	scenario "R1" 
  		description "The user must be able to create a new RAISE project"
  	scenario "R2" 
  		description "The user must be able to import an existing RAISE project."
  	scenario "R3" 
  		description "When a new RAISE project is created, it contains a single folder named 'src'"
  	scenario "R4" 
  		description "The user must be able to add an existing RSL file to an existing RSL project"
  	scenario "R5" 
  		description "The user must be able to add a new RSL file to an existing RSL project"
	scenario "R6"
		description "All RSL actions and views are stores inside the RSL perspective" 
  	scenario "R7" 
  		description "When a RAISE project is imported, it is automatically TYPECHECKPRJ"
  	scenario "R8"
  		description "A RAISE project can have associated one SML project that has the same name plus the suffix 'SML'. This project is created when the first SML file is created"
  	scenario "R9"  			
		description "A generated SML file is stored in the SML project associated to the RAISE project that contains the translated RSL file"
	scenario "R10"
  		description "A RAISE project can have associated one PVS project that has the same name plus the suffix 'PVS'. This project is created when the first PVS file is created"
	scenario "R11"  			
		description "A generated PVS file is stored in the PVS project associated to the RAISE project that contains the translated RSL file"
	scenario "R12"
  		description "A RAISE project can have associated one SAL project that has the same name plus the suffix 'SAL'. This project is created when the first SAL file is created"
	scenario "R13"  			
		description "A generated SAL file is stored in the SAL project associated to the RAISE project that contains the translated RSL file"
	scenario "R14"
  		description "A RAISE project can have associated one documentation project that has the same name plus the suffix 'DOC'. This project is created when the first documentation file is created"	
	scenario "R15"  			
		description "A generated Latex file is stored in the Documentation project associated to the RSL project that contains the translated RSL file"
	scenario "R16"
		description "The documentation project contains a 'main.tex' file that includes all the other tex files in the documentation project"  				  		
end

scenario_chart Core_method_invocation_sequences

end

scenario_chart PROJECT_EXPLORER_FILE
	scenario "PRJF2"
		description "The user can SMLTRANSLATE one RSL file. This implies CONSOLEUPDATE, PROJECTEXPLORERUPDATE, PROBLEMSUPDATE and EDITORUPDATE"	
	scenario "PRJF3"
		description "The user can RUNTESTS on one RSL file. This implies RTESTUPDATE, PROJECTEXPLORERUPDATE, PROBLEMSUPDATE and CONSOLEUPDATE"
	scenario "PRJF4"
		description "The user can GENERATELATEX for one RSL file. This implies CONSOLEUPDATE and PROJECTEXPLORERUPDATE"
end

scenario_chart PROJECT_EXPLORER_PRJ
	scenario "PRJ2"
		description "The user can SMLTRANSLATEPRJ RSL files in a project. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "PRJ3"
		description "The user can RUNTESTSPRJ cases in a project. This implies RTESTUPDATE, PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "PRJ4"
		description "The user can GENERATELATEXPRJ for all RSL files in a project. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
end

scenario_chart MENU
	scenario "SMLaLLMenu"
		description "The user can SMLTRANSLATEALL RSL files in the workspace. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "RunAllMenu"
		description "The user can RUNALLTESTS cases in the workspace. This implies RTESTUPDATE, PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "LatexAllMenu"
		description "The user can GENERATELATEXALL for all files in the workspace. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
end


scenario_chart REPL
	scenario "REPL1"
		description "The user can write ASCII characters in the REPL view"
	scenario "REPL2"
		description "The user can REPLEXECUTE"
	scenario "REPL3"
		description "The output of a user evaluation is REPLUPDATE"
	scenario "REPL4"
		description "The user can CHANGECONTEXT"
	scenario "REPL5"
		description "The user can clear the entire content of the  REPL"
end

scenario_chart TEST
	scenario "TEST1"
		description "The evaluation of test cases results in CONSOLEUPDATE, PROBLEMSUPDATE and EDITORUPDATE"
	scenario "TEST2"
		description "Tests results are shown in a separate view involves RTESTUPDATE"
	scenario "TEST3"
		description "The tests results are stored in a separate file"
end

scenario_chart OUTLINE
	scenario "OTL1"
		description "The user can see the signatures for the entire project in a dedicated window"
end

scenario_chart PROOF
	scenario "PRF1"
		description "The user can see the theorems evaluation in a console log"	
	scenario "PRF2"
		description "In order to prove the theorems the SAL assertions and PVS translators are used"
end

scenario_chart PROBLEMS
	scenario "PRB1"
		description "The user can see the problems existing in the workspace with PROBLEMSUPDATE and EDITORUPDATE. "
	scenario "PRB2"
		description "For each problem the description, resource, path, location and type are specified"
end

scenario_chart CONSOLE
	scenario "CNS1"
		description "The user can see the success or failure messages with CONSOLEUPDATE"	
end
 
scenario_chart EDITOR	
	scenario "EDT2"
		description "The user can SMLTRANSLATE the active RSL file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "EDT3"
		description "The user can RUNTESTS cases in the active RSL file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "EDT4"
		description "The user can GENERATELATEX files for the active RSL file. This implies PROBLEMSUPDATE, CONSOLEUPDATE and EDITORUPDATE"
	scenario "EDT5"
		description "The user SAVE the current RAISE file and the TYPECHECK is automatically run."
  	scenario "EDT7" 
  		description "The user clicks on the run test cases button to RUNTESTS in the currently active file."
  	scenario "EDT8" 
  		description "The user clicks the Latex button to GENERATELATEX for the currently active file"
	scenario "ED9"
		description "RSL keywords and mathematical words are written with a different colour in the editor"
end